<?xml version="1.0"?>
<api>
	<description>
		<![CDATA[This API allows the querying of data surrounding participating fraternities and sororities and their approved events. Authenticated and approved users can add, modify, and delete events that they are designated to curate through these methods as well.]]>
	</description>
	
	
<!-- Badges API -->
	<command id='badges' security='public'>
		<description><![CDATA[This section reveals data about the Badges available to be earned through the use of the program.]]>
		</description>
		
		<index>
			<description><![CDATA[This returns a listing of all badges.]]>
			</description>
			
			<action file='badges.php'><![CDATA[listBadges();]]></action>
		</index>
		
		<get>
			<description><![CDATA[By designating 'badges/{BADGE_ID}', you can get details about a specific badge including how to earn it, its title and description, and when it was created.]]>
			</description>
			
			<action file='badges.php'><![CDATA[getBadge($_REST['badges']);]]></action>
		</get>
		<post> <!-- TODO should be private -->
			<description><![CDATA[The post method allows the posting of new badges for approval if the user is logged in and authorized to submit events.]]>
			</description>
			
			<action file='badges.php'><![CDATA[addBadge($_POST['badgeName'], $_POST['badgeGoal'], $_POST['badgeGoalUnits'], $_POST['badgeDescription'], $_POST['badgePreReq'], $_POST['badgeCustomPicUrl']);]]></action>
			
			<param id='badgeName'>
				<description><![CDATA[Display name of the badge]]></description>
				<exampleValue><![CDATA[Pledge]]></exampleValue>
			</param>
			<param id='badgeGoal'>
				<description><![CDATA[Amount of GOAL_UNITs to earn the badge]]></description>
				<exampleValue><![CDATA[5]]></exampleValue>
			</param>
			<param id='badgeGoalUnits'>
				<description><![CDATA[Units in which the badge will be measured]]></description>
				<exampleValue><![CDATA[Event Check-ins]]></exampleValue>
			</param>
			<param id='badgeDescription'>
				<description><![CDATA[Description of the badge. Feel free to explain why the badge was made, more information about the badge, or whatever you want.]]></description>
				<exampleValue><![CDATA[Join the ranks of the pledges by attending 5 events put on by any organization.]]></exampleValue>
			</param>
			<param id='badgePreReq'>
				<description><![CDATA[BADGE_ID that must be completed before this badge. (optional)]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
			<param id='badgeCustomPicUrl'>
				<description><![CDATA[URL for custom picture]]></description>
				<exampleValue><![CDATA[http://bit.ly/18rs2bI]]></exampleValue>
			</param>
		</post>
	</command>
	
	
<!-- Events API -->
	<command id='events' security='public'>
		<description><![CDATA[This section allows you to see events and their details. If you are logged in and have the correct permissions, you will be able to add, modify, and remove events for which you are authorized. Events that are not approved (either dissapproved or simply not approved yet) will not show up unless you are authorized to edit them.]]>
		</description>
		
		<index>
			<description><![CDATA[This returns a listing of all events that are approved.]]>
			</description>
			
			<!-- <action file='events.php'><![CDATA[listEvents(1);]]></action> -->
			<action file='events.php'><![CDATA[listApprovedEvents();]]></action>
		</index>
		
		<get>
			<description><![CDATA[By designating 'events/{EVENT_ID}', a specific event will be returned along with its details, whether it has happened already or not.]]>
			</description>
			
			<action file='events.php'><![CDATA[getEvent($_REST['events']);]]></action>
		</get>
		
		<post> <!-- TODO should be private -->
			<description><![CDATA[The post method allows the posting of new events for approval if the user is logged in and authorized to submit events.]]>
			</description>
			
			<action file='events.php'><![CDATA[addEvent($_POST['title'], $_POST['date'], $_POST['org_id'], $_POST['foursquare'], $_POST['address'], $_POST['start_time'], $_POST['end_time'], $_POST['summary'], $_POST['type'], $_POST['special_notes'], $_POST['alcohol']);]]></action>
			
			<param id='title'>
				<description><![CDATA[Event title. Short name that describes the event]]></description>
				<exampleValue><![CDATA[Al-Be's Halloween Bash]]></exampleValue>
			</param>
			<param id='date'>
				<description><![CDATA[Date of the event]]></description>
				<exampleValue><![CDATA[2013-10-31]]></exampleValue>
			</param>
			<param id='org_id'>
				<description><![CDATA[ORG_ID that is hosting the event]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
			<param id='foursquare'>
				<description><![CDATA[Foursquare ID for the event]]></description>
				<exampleValue><![CDATA[522f836711d26c041fd70a09]]></exampleValue>
			</param>
			<param id='address'>
				<description><![CDATA[Address of the event, new lines are delimited by '|']]></description>
				<exampleValue><![CDATA[Event Space, Theme Park, and Park in Bay Lake|Bay Lake, FL]]></exampleValue>
			</param>
			<param id='start_time'>
				<description><![CDATA[Start time of the event]]></description>
				<exampleValue><![CDATA[2013-10-31T21:00:00]]></exampleValue>
			</param>
			<param id='end_time'>
				<description><![CDATA[End time of the event.]]></description>
				<exampleValue><![CDATA[2013-11-01T03:30:00]]></exampleValue>
			</param>
			<param id='summary'>
				<description><![CDATA[Summary of the event. Why should we come?]]></description>
				<exampleValue><![CDATA[Come out to the Al-Be Hallow's Eve celebration! There will be drinks for those of age, and fun for all around. Bring your best costume and hang out with the gents from Al-Be!]]></exampleValue>
			</param>
			<param id='type'>
				<description><![CDATA[Very short description of what the event is]]></description>
				<exampleValue><![CDATA[Party]]></exampleValue>
			</param>
			<param id='special_notes'>
				<description><![CDATA[Theme of the event, or more information than title, but less than description]]></description>
				<exampleValue><![CDATA[Halloween Costume Party]]></exampleValue>
			</param>
			<param id='alcohol'>
				<description><![CDATA[If alcohol is allowed at the event]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
		</post>
		
		<put>
			<description><![CDATA[This is how you can update an event.]]></description> <!-- TODO -->
			
			<action file='events.php'><![CDATA[updateEvent($_REST['events'], $_POST['approved']);]]></action>
			<!-- Currently unused parameters
			, $_POST['title'], $_POST['date'], $_POST['org_id'], $_POST['foursquare'], $_POST['address'], $_POST['start_time'], $_POST['end_time'], $_POST['summary'], $_POST['type'], $_POST['special_notes'], $_POST['alcohol']
			-->
			<param id='approved'>
				<description><![CDATA[If event is approved]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
		</put>
		
		<delete>
			<description><![CDATA[This is how you can delete a event]]></description>
			
			<action file='events.php'><![CDATA[deleteEvent($_REST['events']);]]></action>
		</delete>
		
		<!-- EVENTS/ORGS API --> <!-- TODO this is a fine method, but doesn't seem to work as advertised -->
		<command id='orgs' security='public'>
			<description><![CDATA[This section allows you to see event details of specific organizations. Events that are not approved (either dissapproved or simply not approved yet) will not show up unless you are authorized to edit them.]]></description>
		
			<get>
				<description><![CDATA[This method, 'events/[anything]/orgs/{ORG_ID}', allows you to narrow returned events to just those associated with a specified organization.]]></description>
			
				<action file='orgs.php'><![CDATA[getOrg($_REST['orgs']);]]></action>
			</get>
		</command> <!-- Closes nested orgs -->
		
		
		<!-- EVENTS APPROVE API -->
		<command id='a' security='public'> <!-- TODO secure this -->
			<description><![CDATA[Method for approving an event.]]></description>
			
			<get>
				<description><![CDATA[This method, 'events/{EVENT_ID}/a/[anything]', allows you to approve an event.]]></description>
			
				<action file='events.php'><![CDATA[approveEvent($_REST['events'], 1);]]></action>
			</get>
		</command> <!-- Closes nested approve -->
		<!-- EVENTS DISAPPROVE API -->
		<command id='d' security='public'> <!-- TODO secure this -->
			<description><![CDATA[Method for approving an event.]]></description>
			
			<get>
				<description><![CDATA[This method, 'events/{EVENT_ID}/a/[anything]', allows you to disapprove an event.]]></description>
			
				<action file='events.php'><![CDATA[approveEvent($_REST['events'], 2);]]></action>
			</get>
		</command> <!-- Closes nested disapprove -->
		<!-- EVENTS WAITING API -->
		<command id='w' security='public'> <!-- TODO secure this -->
			<description><![CDATA[Method for marking an event as awaiting approval.]]></description>
			
			<get>
				<description><![CDATA[This method, 'events/{EVENT_ID}/a/[anything]', allows you to disapprove an event.]]></description>
			
				<action file='events.php'><![CDATA[approveEvent($_REST['events'], 0);]]></action>
			</get>
		</command> <!-- Closes nested disapprove -->
	
	</command> <!-- Closes events -->

	<!-- EVENTS/APPROVALS API -->
	<command id='approvals' security='public'>
		<description><![CDATA[This section allows you to see a list of unapproved events.]]></description>
	
		<index>
			<description><![CDATA[This returns a listing of all events that are not approved.]]>
			</description>
			
			<action file='events.php'><![CDATA[listUnapprovedEvents();]]></action>
		</index>

		<get>
			<description><![CDATA[By designating 'approvals/{EVENT_ID}', a specific event will be returned along with its details, whether it has happened already or not.]]>
			</description>
			
			<action file='events.php'><![CDATA[getEvent($_REST['approvals']);]]></action>
		</get>

		<put>
			<description><![CDATA[This is how you can update an event.]]></description>
			
			<action file='events.php'><![CDATA[updateEvent($_REST['approvals'], $_POST['approved']);]]></action>
			<!-- 
			, $_POST['title'], $_POST['date'], $_POST['org_id'], $_POST['foursquare'], $_POST['address'], $_POST['start_time'], $_POST['end_time'], $_POST['summary'], $_POST['type'], $_POST['special_notes'], $_POST['alcohol']
			-->
			<param id='approved'>
				<description><![CDATA[If event is approved]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
		</put>

	</command> <!-- Closes approvals -->		
	
<!-- GOV_ORGS API -->
	<command id='gov_orgs' security='public'>
		<description><![CDATA[This allows you to see, add, and remove governing organizations if you have permissions.]]></description>
		
		<index>
			<description><![CDATA[This returns a listing of all governing organizations.]]></description>
			
			<action file='gov_orgs.php'><![CDATA[listGovOrgs();]]></action>
		</index>
		
		<get>
			<description><![CDATA[This method, 'gov_orgs/{GOV_ORG_ID}', allows you to get details about a specific governing organization.]]></description>
			
			<action file='gov_orgs.php'><![CDATA[getGovOrg($_REST['gov_orgs']);]]></action>
		</get>
		
		<post>
			<description><![CDATA[The post method allows the posting of new events for approval if the user is logged in and authorized to submit events.]]>
			</description>
			
			<action file='gov_orgs.php'><![CDATA[addGovOrg($_POST['govOrgName'], $_POST['govOrgAcronym']);]]></action>
			
			<param id='govOrgName'>
				<description><![CDATA[Governing Organization's name]]></description>
				<exampleValue><![CDATA[Interfraternity Council]]></exampleValue>
			</param>
			<param id='govOrgAcronym'>
				<description><![CDATA[Governing Organization's acronym]]></description>
				<exampleValue><![CDATA[IFC]]></exampleValue>
			</param>
		</post>
		
		<command id='orgs' security='public'>
			<description><![CDATA[This allows you to see organizations that are governed by the specified governing organization.]]></description>
		
			<get>
				<description><![CDATA[This method, 'gov_orgs/[anything]/orgs/{ORG_ID} allows you to get a list of organizations that are governed by the specified governing organization]]></description>
			
				<action file='gov_orgs.php'><![CDATA[getOrgs($_REST['gov_orgs']);]]></action>
			</get>
		
		</command> <!-- Closes nested orgs -->
		
	</command> <!-- Closes gov_orgs -->
	
	
<!-- ORGS API -->
	<command id='orgs' security='public'>
		<description><![CDATA[This allows you to see, add, and remove organizations]]></description>
		
		<index>
			<description><![CDATA[This returns a listing of all organizations.]]>
			</description>
			
			<action file='orgs.php'><![CDATA[listOrgs();]]></action>
		</index>
		
		<get>
			<description><![CDATA[By designating 'orgs/{ORG_ID}', details about a specific organization will be returned.]]></description>
		
			<action file='orgs.php'><![CDATA[getOrg($_REST['orgs']);]]></action>
		</get>
		
		<post>
			<description><![CDATA[The post method allows the posting of new organizations if the user is logged in and authorized to submit events.]]>
			</description>
			
			<action file='orgs.php'><![CDATA[addOrg($_POST['orgLetters'], $_POST['orgGovOrgId'], $_POST['orgChapter'], $_POST['orgNickname'], $_POST['orgType'], $_POST['orgFocus'], $_POST['orgYearFounded'], $_POST['orgYearChapterFounded'], $_POST['orgBlurb'], $_POST['orgFoursquare'], $_POST['orgAddress'], $_POST['orgHomepageUrl'], $_POST['orgCustomPicUrl']);]]></action>

			<param id='orgLetters'>
				<description><![CDATA[Greek letters that represent the organization. Should be spelled out in the english alphabet with spaces between letters]]></description>
				<exampleValue><![CDATA[Alpha Alpha]]></exampleValue>
			</param>
			<param id='orgGovOrgId'>
				<description><![CDATA[GOV_ORG_ID of the governing organization of this organization]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
			<param id='orgChapter'>
				<description><![CDATA[Greek letters that represent the organization's chapter. Should be spelled out in the english alphabet with spaces between letters]]></description>
				<exampleValue><![CDATA[Alpha Beta]]></exampleValue>
			</param>
			<param id='orgNickname'>
				<description><![CDATA[Common nickname of the organization]]></description>
				<exampleValue><![CDATA[Al-Be]]></exampleValue>
			</param>
			<param id='orgType'>
				<description><![CDATA[Type of organization. Enum[Fraternity, Sorority]]></description>
				<exampleValue><![CDATA[Fraternity]]></exampleValue>
			</param>
			<param id='orgFocus'>
				<description><![CDATA[Main focus for the existence of the organization. Enum[Social, Service, Honor]]]></description>
				<exampleValue><![CDATA[Social]]></exampleValue>
			</param>
			<param id='orgYearFounded'>
				<description><![CDATA[Founding year of the organization]]></description>
				<exampleValue><![CDATA[1801]]></exampleValue>
			</param>
			<param id='orgYearChapterFounded'>
				<description><![CDATA[Founding year of the chapter of the organization]]></description>
				<exampleValue><![CDATA[1886]]></exampleValue>
			</param>
			<param id='orgBlurb'>
				<description><![CDATA[Area for the organization's public relations person to go nuts]]></description>
				<exampleValue><![CDATA[Alpha Alpha has long been known as a fraternity with a rich history of involvement and character. The handsome men of Al-Be strive to be the best men they can be in and out of the classroom.]]></exampleValue>
			</param>
			<param id='orgFoursquare'>
				<description><![CDATA[Foursquare venue ID for the organization]]></description>
				<exampleValue><![CDATA[4adc6aabf964a5202f2c21e3]]></exampleValue>
			</param>
			<param id='orgAddress'>
				<description><![CDATA[The organization's home address]]></description>
				<exampleValue><![CDATA[66 5th St NW|Atlanta, GA 30308]]></exampleValue>
			</param>
			<param id='orgHomepageUrl'>
				<description><![CDATA[Organization's website homepage url]]></description>
				<exampleValue><![CDATA[http://bit.ly/7hNh]]></exampleValue>
			</param>
			<param id='orgCustomPicUrl'>
				<description><![CDATA[Common nickname of the organization]]></description>
				<exampleValue><![CDATA[http://bit.ly/16ECqQ8]]></exampleValue>
			</param>
		</post>
		
		<put>
			<description><![CDATA[This is how you can update an org]]></description>
			
			<action file='orgs.php'><![CDATA[updateEvent($_REST['org'],$_POST['orgText']);]]></action>
			
			<param id='orgText'>
				<description><![CDATA[org Text To Update]]></description>
				<defaultValue><![CDATA[some default event org update]]></defaultValue>
				<exampleValue><![CDATA[some example event org update]]></exampleValue>
			</param>
		</put>
		
		<delete> <!-- <TODO> Should be private </TODO> -->
			<description><![CDATA[This is how you can delete an org]]></description>
			
			<action file='orgs.php'><![CDATA[deleteEvent($_REST['org']);]]></action>
		</delete>
	</command>
	
	<!-- USERS -->
	<command id='users' security='protected'>
		<description><![CDATA[This method exposes users if appropriate perms and authentication is satisfied]]>
		</description>
		
		<get>
			<description><![CDATA[This method will return data on specific USER_IDs]]>
			</description>
			
			<action file='users.php'><![CDATA[getUser($_REST['users']);]]></action>
		</get>
		
		<post>
			<description><![CDATA[This method will add a user to the system]]>
			</description>
			
			<action file='users.php'><![CDATA[addUser($_POST['userGITD'], $_POST['userGovOrgId'], $_POST['userPerms'], $_POST['userOrgId']);]]></action>
			
			<param id='userGTID'>
				<description><![CDATA[User's GTID (for CAS authentication verification)]]></description>
				<exampleValue><![CDATA[gburdell3]]></exampleValue>
			</param>
			<param id='userGovOrgId'>
				<description><![CDATA[User's governing organization association (to allow/disallow edits)]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
			<param id='userPerms'>
				<description><![CDATA[User's permissions : 0 - Anonymous superuser, 1 - (Governing Org Social Chair) - Can approve/disapprove items (events, pics, etc) within events/orgs associated with user\'s GOV_ORG_ID, can add/suspend users of same or lower PERM and associated with user\'s GOV_ORG_ID, can create badges, 2 - Organization\'s Social Chair - Can submit events for approval, can submit changes for approval, can submit badges for approval]]></description>
				<exampleValue><![CDATA[0]]></exampleValue>
			</param>
			<param id='userOrgId'>
				<description><![CDATA[User's ORG_ID]]></description>
				<exampleValue><![CDATA[1]]></exampleValue>
			</param>
		</post>
		
		
		<command id='perms' security='protected'>
			<description><![CDATA[This method exposes users if appropriate perms and authentication is satisfied]]>
			</description>
			<index>
				<description><![CDATA[This method exposes users if appropriate perms and authentication is satisfied]]>
				</description>
				<action file='users.php'><![CDATA[getUserPerm($_REST['users']);]]></action>
			</index>
			<get>
				<description><![CDATA[This method will return data on specific USER_IDs]]>
				</description>
				<action file='users.php'><![CDATA[getUserPerm($_REST['users']);]]></action>
			</get>
		</command>
	</command>

<!-- EVENTS THIS WEEK -->
	<command id='this_week' security='public'>
		<description><![CDATA[This week returns all events that are approved and start on or after the current day.]]>
		</description>
		
		<index> <!-- TODO this might be supposed to be <index> -->
			<description><![CDATA[This week returns all events that are approved and start on or after the current day.]]>
			</description>
			
			<action file='events.php'><![CDATA[getThisWeek();]]></action>
		</index>
	</command>
	
</api>
